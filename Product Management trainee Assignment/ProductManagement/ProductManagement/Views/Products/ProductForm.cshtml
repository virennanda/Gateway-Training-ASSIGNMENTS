@model  ProductManagement.ViewModels.ProductFormViewModel
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card p-0 shadow-lg">
    <div class="card-header bg-dark text-light">
        <h3>@Model.Title</h3>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Save","Products",FormMethod.Post,new {enctype="multipart/form-data" }))
        {
            @Html.HiddenFor(m=>m.Product.SmallImage)
            @Html.HiddenFor(m=>m.Product.LargeImage)
        <div class="row">
            <div class="col-sm-12 col-md-4 col-lg-4">

                @Html.HiddenFor(m => m.Product.Id)
                @Html.AntiForgeryToken()
                <div class="form-group">
                    @Html.LabelFor(m => m.Product.Name)
                    @Html.TextBoxFor(m => m.Product.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Product.Name)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Product.Price)
                    @Html.TextBoxFor(m => m.Product.Price, new { @class = "form-control", type = "number" })
                    @Html.ValidationMessageFor(m => m.Product.Price)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Product.Quantity)
                    @Html.TextBoxFor(m => m.Product.Quantity, new { @class = "form-control", type = "number" })
                    @Html.ValidationMessageFor(m => m.Product.Quantity)
                </div>
            </div>
            <div class="col-sm-12 col-md-4 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Product.CategoryId)
                    @Html.DropDownListFor(m => m.Product.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "Select Product Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Product.CategoryId)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Product.ShortDescription)
                    @Html.TextBoxFor(m => m.Product.ShortDescription, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Product.ShortDescription)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Product.LongDescription)
                    @Html.TextAreaFor(m => m.Product.LongDescription, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Product.LongDescription)
                </div>
                
            </div>
            <div class="col-sm-12 col-md-4 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Product.SmallImage)
                <input type="file" name="SmallImage" class="form-control" accept=".png,.png,.jpeg" />
                
                    @Html.ValidationMessageFor(m => m.Product.SmallImage)
                </div>
                <div>
                    @Html.LabelFor(m => m.Product.LargeImage)
                    <input type="file" name="LargeImage" class="form-control" accept=".png,.png,.jpeg" />
                    @Html.ValidationMessageFor(m => m.Product.LargeImage)
                </div>
                </div>
                </div>
                <button class="btn btn-primary" type="submit">Submit</button>
                <button class="btn btn-secondary" type="reset">Reset</button>

                }
            </div>
        </div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
     <script>
                 $(function () {
            let errorMessage='@TempData["ErrorMessage"]';
            
                if (errorMessage != '') {
                    alertify.error(errorMessage);
                }
            });
     </script>
}
